trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  AZURE_CONTAINER_APP_NAME: 'building33-mock-api-iac'
  RESOURCE_GROUP: 'Gateway-Resources-IAC'
  DOCKER_IMAGE: 'attonbomb/building33mockapi'  # Replace with your Docker Hub image path
  AZURE_SUBSCRIPTION: 'Gateway-Resources-IAC-MI-Conn-2'
steps:
  - task: Docker@2
    inputs:
      command: 'login'
      containerRegistry: 'attonbomb-DockerHub-SC'
  
  # Set the Azure subscription based on the branch
  - script: |
      echo "Determining Azure subscription...$(Build.SourceBranchName)"
      if [ "$(Build.SourceBranchName)" == "development" ]; then
        echo "##vso[task.setvariable variable=AZURE_SUBSCRIPTION]Dev-Gateway-Resources-MS"
      else
        echo "##vso[task.setvariable variable=AZURE_SUBSCRIPTION]Gateway-Resources-IAC-MI-Conn-2"
      fi
    displayName: 'Set Azure Subscription to $(AZURE_SUBSCRIPTION)'
  
  # Force a restart of the Azure Container App
  - task: AzureCLI@2
    inputs:
      azureSubscription: $(AZURE_SUBSCRIPTION)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        set -e
        set -x

        echo "Restarting Azure Container App with new configuration"
        echo "Updating Azure Container App. The latest image version is ======= $(DOCKER_IMAGE_VERSION)"

        az containerapp list --query "[?name=='building33-mock-api-iac']" --output table
        az group list --query "[?name=='Gateway-IAC-Resources']" --output table

        # Validate resource group
        echo "Validating resource group..."
        if ! az group show --name "$(RESOURCE_GROUP)" > /dev/null 2>&1; then
          echo "Error: Resource group '$(RESOURCE_GROUP)' does not exist."
          exit 1
        fi

        # Validate container app
        echo "Validating container app..."
        if ! az containerapp show --name "$(AZURE_CONTAINER_APP_NAME)" --resource-group "$(RESOURCE_GROUP)" > /dev/null 2>&1; then
          echo "Error: Container app '$(AZURE_CONTAINER_APP_NAME)' does not exist in resource group '$(RESOURCE_GROUP)'."
          exit 1
        fi

        # Update the container image if applicable
        az containerapp update \
          --name $(AZURE_CONTAINER_APP_NAME) \
          --resource-group $(RESOURCE_GROUP) \
          --image $(DOCKER_IMAGE):latest \
          --query "[].properties.provisioningState"

        az containerapp revision restart \
          --name $(AZURE_CONTAINER_APP_NAME) \
          --resource-group $(RESOURCE_GROUP) \
          --revision building33-mock-api-iac--drms06e
        
        echo "Global Integration API Container App updated successfully for Azure Subscription $(AZURE_SUBSCRIPTION)"

